@model IEnumerable<HhcMkTst.Models.hhcsecondarysale>
@{
    ViewBag.Title = "UploadExcel";
}

<h2>UploadExcel</h2>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>tst1Index</title>
</head>
<body>
    @{
        var results = ViewBag.msg;
    }
    <p>@results</p>
    <div>
        @using (Html.BeginForm("UploadExcel", "SSales", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return myFunction()" }))
        {
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="control-label col-md-2">Download Format:</div>
                    <div class="col-md-10">
                        <img src="~/Content/Images/HhcLogo.png" width="25" height="25" title="Download Excel format" alt="excel" />
                    </div>
                </div>


                <div class="form-group">

                    <div class="control-label col-md-2">Excel:</div>
                    <div class="col-md-10">
                        <input type="file" id="FileUpload" name="FileUpload" class="" />
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                     @{   var months = System.Globalization.DateTimeFormatInfo
                        .InvariantInfo
                        .MonthNames
                        .TakeWhile(monthName => monthName != String.Empty)
                        .Select((monthName, index) => new SelectListItem
                        {
                            Value = (index + 1).ToString(System.Globalization.CultureInfo.InvariantCulture),
                            Text = string.Format("{0}", monthName)
                        });
        }
                       
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                       @{ var years = Enumerable
                        .Range(2014, 25)
                        .Select(year => new SelectListItem
                        {
                            Value = year.ToString(System.Globalization.CultureInfo.InvariantCulture),
                            Text = year.ToString(System.Globalization.CultureInfo.InvariantCulture)
                        });
                           }
                        @Html.DropDownList("month", months)
                        @Html.DropDownList("year", years)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Upload" id="btnSubmit" class="btn btn-primary" />

                    </div>
                </div>

            </div>
        }
        <table class="table table-bordered table-hover">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.stockistid)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.month)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.year)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.sapmaterialcode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.stockistproductname)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.package)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.openingstock)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.purshcasequantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.salequantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.purchasereturn)
                <th>
                    @Html.DisplayNameFor(model => model.salereturn)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.closing)
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.stockistid)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.month)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.year)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.sapmaterialcode)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.stockistproductname)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.package)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.openingstock)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.purshcasequantity)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.salequantity)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.purchasereturn)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.salereturn)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.closing)
                    </td>
                </tr>
            }

        </table>


    </div>
</body>
</html>
